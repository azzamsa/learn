name: Caesar Backend (CI)

env:
  MIN_SUPPORTED_RUST_VERSION: "1.65.0"

on:
  push:
    paths:
      -  src/caesars/backend/**
      - .github/workflows/caesars.yml
      - .github/workflows/caesars_backend.yml
  pull_request:
    paths:
      -  src/caesars/backend/**
      - .github/workflows/caesars.yml
      - .github/workflows/caesars_backend.yml

defaults:
  run:
    working-directory: src/caesars/backend

jobs:
  code_quality:
    name: Code quality
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Install latest just release
        uses: extractions/setup-just@v1

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Ensure `fmt` has been run
        run:  just fmt-check

      - name: Run clippy
        run: just lint


  msrv:
    name: Minimum supported rust version
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install rust toolchain (v${{ env.MIN_SUPPORTED_RUST_VERSION }})
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.MIN_SUPPORTED_RUST_VERSION }}

      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest

      - name: Install latest just release
        uses: extractions/setup-just@v1

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Prepare the environment variables
        run: |
          cp .example.env .env

      - name: Run tests
        run: just test

  build:
    name: ${{ matrix.job.os }} (${{ matrix.job.target }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-22.04, target: x86_64-unknown-linux-gnu    }

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}

      - name: Show version information
        shell: bash
        run: |
          gcc --version || true
          rustup -V
          rustup toolchain list
          rustup default
          cargo -V
          rustc -V

      - name: Set cargo cmd
        shell: bash
        run: echo "CARGO_CMD=cargo" >> $GITHUB_ENV

      - name: Set cargo cmd to cross
        shell: bash
        if: ${{ matrix.job.use-cross == true }}
        run: echo "CARGO_CMD=cross" >> $GITHUB_ENV

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.job.os }}-${{ matrix.job.target }}

      - name: Install cross
        if: ${{ matrix.job.use-cross == true }}
        uses: taiki-e/install-action@cross

      - name: Build
        run: ${{ env.CARGO_CMD }} build --verbose --target=${{ matrix.job.target }}
