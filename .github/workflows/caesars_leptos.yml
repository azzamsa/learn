name: Caesar Leptos (CI)

on:
  push:
    paths:
      -  src/caesars/web/frontend/leptos/**
      - .github/workflows/caesars.yml
      - .github/workflows/caesars_leptos.yml
  pull_request:
    paths:
      -  src/caesars/web/frontend/leptos/**
      - .github/workflows/caesars.yml
      - .github/workflows/caesars_leptos.yml

defaults:
  run:
    working-directory: src/caesars/web/frontend/leptos

jobs:
  code_quality:
    name: Code quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt

      - uses: taiki-e/install-action@just
      - uses: taiki-e/install-action@dprint
      - uses: taiki-e/install-action@nextest
      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Install JS dependencies
        run: |
          pnpm install

      - name: Run check
        run: just check


  min_version:
    name: Minimum supported rust version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - uses: taiki-e/install-action@just
      - uses: taiki-e/install-action@nextest

      - name: Run test
        run:  just test

  build:
    name: ${{ matrix.job.os }} (${{ matrix.job.target }})
    runs-on: ${{ matrix.job.os }}

    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-latest, target: wasm32-unknown-unknown   }

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}

      - name: Install JS dependencies
        run: |
          npm install

      - uses: taiki-e/install-action@just
      - uses: taiki-e/install-action@nextest
      - uses: taiki-e/install-action@v2
        with:
          tool: trunk
      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Show version information
        shell: bash
        run: |
          cargo -V
          rustc -V

          pnpx rustywind --version
          trunk --version

      - name: Install JS dependencies
        run: |
          pnpm install

      - name: Run build
        run:  trunk build

      - name: Run test
        run:  just test
