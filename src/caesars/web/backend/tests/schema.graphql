
type Config {
	env: String!
	baseUrl: String!
	port: Int!
}

type Decrypt {
	plain: String!
	rotation: Int!
}

type Encrypt {
	secret: String!
	rotation: Int!
}


type Health {
	status: String!
}



type Meta {
	build: String!
	version: String!
	config: Config!
}

type Query {
	meta: Meta!
	health: Health!
	encrypt(plain: String!, rotation: Int!): Encrypt!
	decrypt(secret: String!, rotation: Int!): Decrypt!
}


directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
schema {
	query: Query
}
