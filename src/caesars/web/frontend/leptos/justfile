#!/usr/bin/env -S just --justfile

alias d := dev
alias r := run
alias t := test

# List available commands.
_default:
    just --list --unsorted

# Setup the repository.
setup:
    rustup toolchain install nightly --allow-downgrade
    rustup default nightly
    rustup target add wasm32-unknown-unknown

    (_cargo-install 'cargo-generate')
    (_cargo-install 'trunk')
    (_cargo-install 'microserver')

    npm install

# Clean build artifacts.
clean:
    trunk clean

# Develop the app.
dev:
    cargo watch -x 'clippy --locked --all-targets --all-features'

# Run the app in develompent mode
run:
    trunk serve

# Preview the build output.
preview-build:
    microserver dist/

# Format the codebase.
fmt:
    cargo fmt --all
    npx rustywind --write .
    leptosfmt src
    dprint fmt --config configs/dprint.json

# Check is the codebase properly formatted.
fmt-check:
    cargo fmt --check
    npx rustywind --check-formatted .
    dprint check --config configs/dprint.json

# Lint the codebase.
lint:
    cargo clippy --all-targets --all-features

# Check the documentation.
_doc-check:
    cargo doc --all-features --no-deps

# Lint the codebase.
test:
    cargo test --all --all-features --all-targets

# Tasks to make the code-base comply with the rules. Mostly used locally or in git hooks.
comply: fmt lint test

# Check if the repository comply with the rules. Mostly used in CI.
check: fmt-check lint test _doc-check

# Check dependencies health. Pass `--write` to uppgrade dependencies.
[unix]
up arg="":
    #!/usr/bin/env bash
    if [ "{{ arg }}" = "--write" ]; then
        cargo upgrade
        cargo update
    else
        cargo outdated --root-deps-only
    fi;

[windows]
up arg="":
    #!powershell.exe
    if ( "{{ arg }}" -eq "--write") {
        cargo upgrade
        cargo update
    }
    else {
        cargo outdated --root-deps-only
    }

#
# Helper
#

[unix]
_cargo-install tool:
    #!/usr/bin/env bash
    {{ tool }} --version || cargo install {{ tool }}

[windows]
_cargo-install tool:
    #!powershell.exe
    if (!(Get-Command {{ tool }} -ErrorAction SilentlyContinue)) { cargo install {{ tool }} }
